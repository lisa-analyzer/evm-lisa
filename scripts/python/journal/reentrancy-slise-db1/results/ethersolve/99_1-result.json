{
  "name": "Analysis_2024-11-14_11-29-17",
  "address": "",
  "binarySource": "608060405234801561001057600080fd5b50610416806100206000396000f300608060405260043610610057576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806318160ddd1461005c57806370a0823114610087578063a9059cbb146100de575b600080fd5b34801561006857600080fd5b50610071610143565b6040518082815260200191505060405180910390f35b34801561009357600080fd5b506100c8600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061014d565b6040518082815260200191505060405180910390f35b3480156100ea57600080fd5b50610129600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610195565b604051808215151515815260200191505060405180910390f35b6000600154905090565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b60008060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205482111515156101e457600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415151561022057600080fd5b610271826000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546103b590919063ffffffff16565b6000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550610304826000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546103ce90919063ffffffff16565b6000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040518082815260200191505060405180910390a36001905092915050565b60008282111515156103c357fe5b818303905092915050565b600081830190508281101515156103e157fe5b809050929150505600a165627a7a723058206e01ac9e47a8243a26b4ad361918ec3edc0050097183d8c95ce36a34c1a510b50029",
  "binaryHash": "acc939f7",
  "isOnlyRuntime": false,
  "metadata": "a165627a7a723058206e01ac9e47a8243a26b4ad361918ec3edc0050097183d8c95ce36a34c1a510b50029",
  "solidityVersion": "\u003c 0.5.9",
  "constructorRemainingData": "",
  "constructorCfg": {
    "bytecode": "608060405234801561001057600080fd5b50610416806100206000396000f300",
    "remainingData": "00",
    "nodes": [
      {
        "offset": 0,
        "length": 12,
        "type": "dispatcher",
        "stackBalance": 1,
        "bytecodeHex": "608060405234801561001057",
        "parsedOpcodes": "0: PUSH1 0x80\n2: PUSH1 0x40\n4: MSTORE\n5: CALLVALUE\n6: DUP1\n7: ISZERO\n8: PUSH2 0x0010\n11: JUMPI"
      },
      {
        "offset": 12,
        "length": 4,
        "type": "dispatcher",
        "stackBalance": 0,
        "bytecodeHex": "600080fd",
        "parsedOpcodes": "12: PUSH1 0x00\n14: DUP1\n15: REVERT"
      },
      {
        "offset": 16,
        "length": 15,
        "type": "fallback",
        "stackBalance": -1,
        "bytecodeHex": "5b50610416806100206000396000f3",
        "parsedOpcodes": "16: JUMPDEST\n17: POP\n18: PUSH2 0x0416\n21: DUP1\n22: PUSH2 0x0020\n25: PUSH1 0x00\n27: CODECOPY\n28: PUSH1 0x00\n30: RETURN"
      },
      {
        "offset": 31,
        "length": 0,
        "type": "exit",
        "stackBalance": 0,
        "bytecodeHex": "",
        "parsedOpcodes": "31: EXIT BLOCK"
      }
    ],
    "successors": [
      {
        "from": 0,
        "to": [
          12,
          16
        ]
      },
      {
        "from": 12,
        "to": [
          31
        ]
      },
      {
        "from": 16,
        "to": [
          31
        ]
      },
      {
        "from": 31,
        "to": []
      }
    ],
    "buildReport": {
      "directJumpTargetErrors": 0,
      "orphanJumpTargetNullErrors": 0,
      "orphanJumpTargetUnknownErrors": 0,
      "loopDepthExceededErrors": 0,
      "multipleRootNodesErrors": 0,
      "stackExceededErrors": 0,
      "blockLimitErrors": 0,
      "criticalErrors": 0,
      "errorLog": "",
      "buildTimeMillis": 20
    }
  },
  "runtimeCfg": {
    "bytecode": "608060405260043610610057576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806318160ddd1461005c57806370a0823114610087578063a9059cbb146100de575b600080fd5b34801561006857600080fd5b50610071610143565b6040518082815260200191505060405180910390f35b34801561009357600080fd5b506100c8600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061014d565b6040518082815260200191505060405180910390f35b3480156100ea57600080fd5b50610129600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610195565b604051808215151515815260200191505060405180910390f35b6000600154905090565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b60008060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205482111515156101e457600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415151561022057600080fd5b610271826000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546103b590919063ffffffff16565b6000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550610304826000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546103ce90919063ffffffff16565b6000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040518082815260200191505060405180910390a36001905092915050565b60008282111515156103c357fe5b818303905092915050565b600081830190508281101515156103e157fe5b809050929150505600",
    "remainingData": "00",
    "nodes": [
      {
        "offset": 0,
        "length": 13,
        "type": "dispatcher",
        "stackBalance": 0,
        "bytecodeHex": "60806040526004361061005757",
        "parsedOpcodes": "0: PUSH1 0x80\n2: PUSH1 0x40\n4: MSTORE\n5: PUSH1 0x04\n7: CALLDATASIZE\n8: LT\n9: PUSH2 0x0057\n12: JUMPI"
      },
      {
        "offset": 13,
        "length": 52,
        "type": "dispatcher",
        "stackBalance": 1,
        "bytecodeHex": "6000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806318160ddd1461005c57",
        "parsedOpcodes": "13: PUSH1 0x00\n15: CALLDATALOAD\n16: PUSH29 0x0100000000000000000000000000000000000000000000000000000000\n46: SWAP1\n47: DIV\n48: PUSH4 0xffffffff\n53: AND\n54: DUP1\n55: PUSH4 0x18160ddd\n60: EQ\n61: PUSH2 0x005c\n64: JUMPI"
      },
      {
        "offset": 65,
        "length": 11,
        "type": "dispatcher",
        "stackBalance": 0,
        "bytecodeHex": "806370a082311461008757",
        "parsedOpcodes": "65: DUP1\n66: PUSH4 0x70a08231\n71: EQ\n72: PUSH2 0x0087\n75: JUMPI"
      },
      {
        "offset": 76,
        "length": 11,
        "type": "dispatcher",
        "stackBalance": 0,
        "bytecodeHex": "8063a9059cbb146100de57",
        "parsedOpcodes": "76: DUP1\n77: PUSH4 0xa9059cbb\n82: EQ\n83: PUSH2 0x00de\n86: JUMPI"
      },
      {
        "offset": 87,
        "length": 5,
        "type": "dispatcher",
        "stackBalance": 0,
        "bytecodeHex": "5b600080fd",
        "parsedOpcodes": "87: JUMPDEST\n88: PUSH1 0x00\n90: DUP1\n91: REVERT"
      },
      {
        "offset": 92,
        "length": 8,
        "type": "dispatcher",
        "stackBalance": 1,
        "bytecodeHex": "5b34801561006857",
        "parsedOpcodes": "92: JUMPDEST\n93: CALLVALUE\n94: DUP1\n95: ISZERO\n96: PUSH2 0x0068\n99: JUMPI"
      },
      {
        "offset": 100,
        "length": 4,
        "type": "dispatcher",
        "stackBalance": 0,
        "bytecodeHex": "600080fd",
        "parsedOpcodes": "100: PUSH1 0x00\n102: DUP1\n103: REVERT"
      },
      {
        "offset": 104,
        "length": 9,
        "type": "dispatcher",
        "stackBalance": 0,
        "bytecodeHex": "5b5061007161014356",
        "parsedOpcodes": "104: JUMPDEST\n105: POP\n106: PUSH2 0x0071\n109: PUSH2 0x0143\n112: JUMP"
      },
      {
        "offset": 113,
        "length": 22,
        "type": "dispatcher",
        "stackBalance": -1,
        "bytecodeHex": "5b6040518082815260200191505060405180910390f3",
        "parsedOpcodes": "113: JUMPDEST\n114: PUSH1 0x40\n116: MLOAD\n117: DUP1\n118: DUP3\n119: DUP2\n120: MSTORE\n121: PUSH1 0x20\n123: ADD\n124: SWAP2\n125: POP\n126: POP\n127: PUSH1 0x40\n129: MLOAD\n130: DUP1\n131: SWAP2\n132: SUB\n133: SWAP1\n134: RETURN"
      },
      {
        "offset": 135,
        "length": 8,
        "type": "dispatcher",
        "stackBalance": 1,
        "bytecodeHex": "5b34801561009357",
        "parsedOpcodes": "135: JUMPDEST\n136: CALLVALUE\n137: DUP1\n138: ISZERO\n139: PUSH2 0x0093\n142: JUMPI"
      },
      {
        "offset": 143,
        "length": 4,
        "type": "dispatcher",
        "stackBalance": 0,
        "bytecodeHex": "600080fd",
        "parsedOpcodes": "143: PUSH1 0x00\n145: DUP1\n146: REVERT"
      },
      {
        "offset": 147,
        "length": 53,
        "type": "dispatcher",
        "stackBalance": 1,
        "bytecodeHex": "5b506100c8600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061014d56",
        "parsedOpcodes": "147: JUMPDEST\n148: POP\n149: PUSH2 0x00c8\n152: PUSH1 0x04\n154: DUP1\n155: CALLDATASIZE\n156: SUB\n157: DUP2\n158: ADD\n159: SWAP1\n160: DUP1\n161: DUP1\n162: CALLDATALOAD\n163: PUSH20 0xffffffffffffffffffffffffffffffffffffffff\n184: AND\n185: SWAP1\n186: PUSH1 0x20\n188: ADD\n189: SWAP1\n190: SWAP3\n191: SWAP2\n192: SWAP1\n193: POP\n194: POP\n195: POP\n196: PUSH2 0x014d\n199: JUMP"
      },
      {
        "offset": 200,
        "length": 22,
        "type": "dispatcher",
        "stackBalance": -1,
        "bytecodeHex": "5b6040518082815260200191505060405180910390f3",
        "parsedOpcodes": "200: JUMPDEST\n201: PUSH1 0x40\n203: MLOAD\n204: DUP1\n205: DUP3\n206: DUP2\n207: MSTORE\n208: PUSH1 0x20\n210: ADD\n211: SWAP2\n212: POP\n213: POP\n214: PUSH1 0x40\n216: MLOAD\n217: DUP1\n218: SWAP2\n219: SUB\n220: SWAP1\n221: RETURN"
      },
      {
        "offset": 222,
        "length": 8,
        "type": "dispatcher",
        "stackBalance": 1,
        "bytecodeHex": "5b3480156100ea57",
        "parsedOpcodes": "222: JUMPDEST\n223: CALLVALUE\n224: DUP1\n225: ISZERO\n226: PUSH2 0x00ea\n229: JUMPI"
      },
      {
        "offset": 230,
        "length": 4,
        "type": "dispatcher",
        "stackBalance": 0,
        "bytecodeHex": "600080fd",
        "parsedOpcodes": "230: PUSH1 0x00\n232: DUP1\n233: REVERT"
      },
      {
        "offset": 234,
        "length": 63,
        "type": "dispatcher",
        "stackBalance": 2,
        "bytecodeHex": "5b50610129600480360381019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919050505061019556",
        "parsedOpcodes": "234: JUMPDEST\n235: POP\n236: PUSH2 0x0129\n239: PUSH1 0x04\n241: DUP1\n242: CALLDATASIZE\n243: SUB\n244: DUP2\n245: ADD\n246: SWAP1\n247: DUP1\n248: DUP1\n249: CALLDATALOAD\n250: PUSH20 0xffffffffffffffffffffffffffffffffffffffff\n271: AND\n272: SWAP1\n273: PUSH1 0x20\n275: ADD\n276: SWAP1\n277: SWAP3\n278: SWAP2\n279: SWAP1\n280: DUP1\n281: CALLDATALOAD\n282: SWAP1\n283: PUSH1 0x20\n285: ADD\n286: SWAP1\n287: SWAP3\n288: SWAP2\n289: SWAP1\n290: POP\n291: POP\n292: POP\n293: PUSH2 0x0195\n296: JUMP"
      },
      {
        "offset": 297,
        "length": 26,
        "type": "dispatcher",
        "stackBalance": -1,
        "bytecodeHex": "5b604051808215151515815260200191505060405180910390f3",
        "parsedOpcodes": "297: JUMPDEST\n298: PUSH1 0x40\n300: MLOAD\n301: DUP1\n302: DUP3\n303: ISZERO\n304: ISZERO\n305: ISZERO\n306: ISZERO\n307: DUP2\n308: MSTORE\n309: PUSH1 0x20\n311: ADD\n312: SWAP2\n313: POP\n314: POP\n315: PUSH1 0x40\n317: MLOAD\n318: DUP1\n319: SWAP2\n320: SUB\n321: SWAP1\n322: RETURN"
      },
      {
        "offset": 323,
        "length": 10,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "5b600060015490509056",
        "parsedOpcodes": "323: JUMPDEST\n324: PUSH1 0x00\n326: PUSH1 0x01\n328: SLOAD\n329: SWAP1\n330: POP\n331: SWAP1\n332: JUMP"
      },
      {
        "offset": 333,
        "length": 72,
        "type": "common",
        "stackBalance": -1,
        "bytecodeHex": "5b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905091905056",
        "parsedOpcodes": "333: JUMPDEST\n334: PUSH1 0x00\n336: DUP1\n337: PUSH1 0x00\n339: DUP4\n340: PUSH20 0xffffffffffffffffffffffffffffffffffffffff\n361: AND\n362: PUSH20 0xffffffffffffffffffffffffffffffffffffffff\n383: AND\n384: DUP2\n385: MSTORE\n386: PUSH1 0x20\n388: ADD\n389: SWAP1\n390: DUP2\n391: MSTORE\n392: PUSH1 0x20\n394: ADD\n395: PUSH1 0x00\n397: SHA3\n398: SLOAD\n399: SWAP1\n400: POP\n401: SWAP2\n402: SWAP1\n403: POP\n404: JUMP"
      },
      {
        "offset": 405,
        "length": 75,
        "type": "common",
        "stackBalance": 1,
        "bytecodeHex": "5b60008060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205482111515156101e457",
        "parsedOpcodes": "405: JUMPDEST\n406: PUSH1 0x00\n408: DUP1\n409: PUSH1 0x00\n411: CALLER\n412: PUSH20 0xffffffffffffffffffffffffffffffffffffffff\n433: AND\n434: PUSH20 0xffffffffffffffffffffffffffffffffffffffff\n455: AND\n456: DUP2\n457: MSTORE\n458: PUSH1 0x20\n460: ADD\n461: SWAP1\n462: DUP2\n463: MSTORE\n464: PUSH1 0x20\n466: ADD\n467: PUSH1 0x00\n469: SHA3\n470: SLOAD\n471: DUP3\n472: GT\n473: ISZERO\n474: ISZERO\n475: ISZERO\n476: PUSH2 0x01e4\n479: JUMPI"
      },
      {
        "offset": 480,
        "length": 4,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "600080fd",
        "parsedOpcodes": "480: PUSH1 0x00\n482: DUP1\n483: REVERT"
      },
      {
        "offset": 484,
        "length": 56,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "5b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415151561022057",
        "parsedOpcodes": "484: JUMPDEST\n485: PUSH1 0x00\n487: PUSH20 0xffffffffffffffffffffffffffffffffffffffff\n508: AND\n509: DUP4\n510: PUSH20 0xffffffffffffffffffffffffffffffffffffffff\n531: AND\n532: EQ\n533: ISZERO\n534: ISZERO\n535: ISZERO\n536: PUSH2 0x0220\n539: JUMPI"
      },
      {
        "offset": 540,
        "length": 4,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "600080fd",
        "parsedOpcodes": "540: PUSH1 0x00\n542: DUP1\n543: REVERT"
      },
      {
        "offset": 544,
        "length": 81,
        "type": "common",
        "stackBalance": 3,
        "bytecodeHex": "5b610271826000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546103b590919063ffffffff1656",
        "parsedOpcodes": "544: JUMPDEST\n545: PUSH2 0x0271\n548: DUP3\n549: PUSH1 0x00\n551: DUP1\n552: CALLER\n553: PUSH20 0xffffffffffffffffffffffffffffffffffffffff\n574: AND\n575: PUSH20 0xffffffffffffffffffffffffffffffffffffffff\n596: AND\n597: DUP2\n598: MSTORE\n599: PUSH1 0x20\n601: ADD\n602: SWAP1\n603: DUP2\n604: MSTORE\n605: PUSH1 0x20\n607: ADD\n608: PUSH1 0x00\n610: SHA3\n611: SLOAD\n612: PUSH2 0x03b5\n615: SWAP1\n616: SWAP2\n617: SWAP1\n618: PUSH4 0xffffffff\n623: AND\n624: JUMP"
      },
      {
        "offset": 625,
        "length": 147,
        "type": "common",
        "stackBalance": 2,
        "bytecodeHex": "5b6000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550610304826000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546103ce90919063ffffffff1656",
        "parsedOpcodes": "625: JUMPDEST\n626: PUSH1 0x00\n628: DUP1\n629: CALLER\n630: PUSH20 0xffffffffffffffffffffffffffffffffffffffff\n651: AND\n652: PUSH20 0xffffffffffffffffffffffffffffffffffffffff\n673: AND\n674: DUP2\n675: MSTORE\n676: PUSH1 0x20\n678: ADD\n679: SWAP1\n680: DUP2\n681: MSTORE\n682: PUSH1 0x20\n684: ADD\n685: PUSH1 0x00\n687: SHA3\n688: DUP2\n689: SWAP1\n690: SSTORE\n691: POP\n692: PUSH2 0x0304\n695: DUP3\n696: PUSH1 0x00\n698: DUP1\n699: DUP7\n700: PUSH20 0xffffffffffffffffffffffffffffffffffffffff\n721: AND\n722: PUSH20 0xffffffffffffffffffffffffffffffffffffffff\n743: AND\n744: DUP2\n745: MSTORE\n746: PUSH1 0x20\n748: ADD\n749: SWAP1\n750: DUP2\n751: MSTORE\n752: PUSH1 0x20\n754: ADD\n755: PUSH1 0x00\n757: SHA3\n758: SLOAD\n759: PUSH2 0x03ce\n762: SWAP1\n763: SWAP2\n764: SWAP1\n765: PUSH4 0xffffffff\n770: AND\n771: JUMP"
      },
      {
        "offset": 772,
        "length": 177,
        "type": "common",
        "stackBalance": -4,
        "bytecodeHex": "5b6000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040518082815260200191505060405180910390a3600190509291505056",
        "parsedOpcodes": "772: JUMPDEST\n773: PUSH1 0x00\n775: DUP1\n776: DUP6\n777: PUSH20 0xffffffffffffffffffffffffffffffffffffffff\n798: AND\n799: PUSH20 0xffffffffffffffffffffffffffffffffffffffff\n820: AND\n821: DUP2\n822: MSTORE\n823: PUSH1 0x20\n825: ADD\n826: SWAP1\n827: DUP2\n828: MSTORE\n829: PUSH1 0x20\n831: ADD\n832: PUSH1 0x00\n834: SHA3\n835: DUP2\n836: SWAP1\n837: SSTORE\n838: POP\n839: DUP3\n840: PUSH20 0xffffffffffffffffffffffffffffffffffffffff\n861: AND\n862: CALLER\n863: PUSH20 0xffffffffffffffffffffffffffffffffffffffff\n884: AND\n885: PUSH32 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n918: DUP5\n919: PUSH1 0x40\n921: MLOAD\n922: DUP1\n923: DUP3\n924: DUP2\n925: MSTORE\n926: PUSH1 0x20\n928: ADD\n929: SWAP2\n930: POP\n931: POP\n932: PUSH1 0x40\n934: MLOAD\n935: DUP1\n936: SWAP2\n937: SUB\n938: SWAP1\n939: LOG3\n940: PUSH1 0x01\n942: SWAP1\n943: POP\n944: SWAP3\n945: SWAP2\n946: POP\n947: POP\n948: JUMP"
      },
      {
        "offset": 949,
        "length": 13,
        "type": "common",
        "stackBalance": 1,
        "bytecodeHex": "5b60008282111515156103c357",
        "parsedOpcodes": "949: JUMPDEST\n950: PUSH1 0x00\n952: DUP3\n953: DUP3\n954: GT\n955: ISZERO\n956: ISZERO\n957: ISZERO\n958: PUSH2 0x03c3\n961: JUMPI"
      },
      {
        "offset": 962,
        "length": 1,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "fe",
        "parsedOpcodes": "962: INVALID"
      },
      {
        "offset": 963,
        "length": 11,
        "type": "common",
        "stackBalance": -3,
        "bytecodeHex": "5b81830390509291505056",
        "parsedOpcodes": "963: JUMPDEST\n964: DUP2\n965: DUP4\n966: SUB\n967: SWAP1\n968: POP\n969: SWAP3\n970: SWAP2\n971: POP\n972: POP\n973: JUMP"
      },
      {
        "offset": 974,
        "length": 18,
        "type": "common",
        "stackBalance": 1,
        "bytecodeHex": "5b600081830190508281101515156103e157",
        "parsedOpcodes": "974: JUMPDEST\n975: PUSH1 0x00\n977: DUP2\n978: DUP4\n979: ADD\n980: SWAP1\n981: POP\n982: DUP3\n983: DUP2\n984: LT\n985: ISZERO\n986: ISZERO\n987: ISZERO\n988: PUSH2 0x03e1\n991: JUMPI"
      },
      {
        "offset": 992,
        "length": 1,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "fe",
        "parsedOpcodes": "992: INVALID"
      },
      {
        "offset": 993,
        "length": 9,
        "type": "common",
        "stackBalance": -3,
        "bytecodeHex": "5b8090509291505056",
        "parsedOpcodes": "993: JUMPDEST\n994: DUP1\n995: SWAP1\n996: POP\n997: SWAP3\n998: SWAP2\n999: POP\n1000: POP\n1001: JUMP"
      },
      {
        "offset": 1002,
        "length": 0,
        "type": "exit",
        "stackBalance": 0,
        "bytecodeHex": "",
        "parsedOpcodes": "1002: EXIT BLOCK"
      }
    ],
    "successors": [
      {
        "from": 0,
        "to": [
          13,
          87
        ]
      },
      {
        "from": 13,
        "to": [
          65,
          92
        ]
      },
      {
        "from": 65,
        "to": [
          76,
          135
        ]
      },
      {
        "from": 76,
        "to": [
          87,
          222
        ]
      },
      {
        "from": 87,
        "to": [
          1002
        ]
      },
      {
        "from": 92,
        "to": [
          100,
          104
        ]
      },
      {
        "from": 100,
        "to": [
          1002
        ]
      },
      {
        "from": 104,
        "to": [
          323,
          323
        ]
      },
      {
        "from": 113,
        "to": [
          1002
        ]
      },
      {
        "from": 135,
        "to": [
          143,
          147
        ]
      },
      {
        "from": 143,
        "to": [
          1002
        ]
      },
      {
        "from": 147,
        "to": [
          333,
          333
        ]
      },
      {
        "from": 200,
        "to": [
          1002
        ]
      },
      {
        "from": 222,
        "to": [
          230,
          234
        ]
      },
      {
        "from": 230,
        "to": [
          1002
        ]
      },
      {
        "from": 234,
        "to": [
          405,
          405
        ]
      },
      {
        "from": 297,
        "to": [
          1002
        ]
      },
      {
        "from": 323,
        "to": [
          113
        ]
      },
      {
        "from": 333,
        "to": [
          200
        ]
      },
      {
        "from": 405,
        "to": [
          480,
          484
        ]
      },
      {
        "from": 480,
        "to": [
          1002
        ]
      },
      {
        "from": 484,
        "to": [
          540,
          544
        ]
      },
      {
        "from": 540,
        "to": [
          1002
        ]
      },
      {
        "from": 544,
        "to": [
          949
        ]
      },
      {
        "from": 625,
        "to": [
          974
        ]
      },
      {
        "from": 772,
        "to": [
          297
        ]
      },
      {
        "from": 949,
        "to": [
          962,
          963
        ]
      },
      {
        "from": 962,
        "to": [
          1002
        ]
      },
      {
        "from": 963,
        "to": [
          625
        ]
      },
      {
        "from": 974,
        "to": [
          992,
          993
        ]
      },
      {
        "from": 992,
        "to": [
          1002
        ]
      },
      {
        "from": 993,
        "to": [
          772
        ]
      },
      {
        "from": 1002,
        "to": []
      }
    ],
    "buildReport": {
      "directJumpTargetErrors": 0,
      "orphanJumpTargetNullErrors": 0,
      "orphanJumpTargetUnknownErrors": 0,
      "loopDepthExceededErrors": 0,
      "multipleRootNodesErrors": 0,
      "stackExceededErrors": 0,
      "blockLimitErrors": 0,
      "criticalErrors": 0,
      "errorLog": "",
      "buildTimeMillis": 45
    }
  }
}