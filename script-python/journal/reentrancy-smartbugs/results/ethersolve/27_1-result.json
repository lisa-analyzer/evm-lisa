{
  "name": "Analysis_2024-11-05_13-21-20",
  "address": "",
  "binarySource": "6060604052341561000f57600080fd5b6101de8061001e6000396000f30060606040526004361061004c576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff168063853828b614610051578063d0e30db014610066575b600080fd5b341561005c57600080fd5b610064610070565b005b61006e610154565b005b6000806000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549150600082111561015057816001600082825403925050819055503373ffffffffffffffffffffffffffffffffffffffff168260405160006040518083038185876187965a03f192505050905080151561010b57600080fd5b60008060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505b5050565b346000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282540192505081905550346001600082825401925050819055505600a165627a7a72305820dd9493409efa1703f87fae815f2c8eec4b4469074e278d3dc2b33a100b775b4d0029",
  "binaryHash": "7c2c56a7",
  "isOnlyRuntime": false,
  "metadata": "a165627a7a72305820dd9493409efa1703f87fae815f2c8eec4b4469074e278d3dc2b33a100b775b4d0029",
  "solidityVersion": "\u003c 0.5.9",
  "constructorRemainingData": "",
  "constructorCfg": {
    "bytecode": "6060604052341561000f57600080fd5b6101de8061001e6000396000f300",
    "remainingData": "00",
    "nodes": [
      {
        "offset": 0,
        "length": 11,
        "type": "dispatcher",
        "stackBalance": 0,
        "bytecodeHex": "6060604052341561000f57",
        "parsedOpcodes": "0: PUSH1 0x60\n2: PUSH1 0x40\n4: MSTORE\n5: CALLVALUE\n6: ISZERO\n7: PUSH2 0x000f\n10: JUMPI"
      },
      {
        "offset": 11,
        "length": 4,
        "type": "dispatcher",
        "stackBalance": 0,
        "bytecodeHex": "600080fd",
        "parsedOpcodes": "11: PUSH1 0x00\n13: DUP1\n14: REVERT"
      },
      {
        "offset": 15,
        "length": 14,
        "type": "fallback",
        "stackBalance": 0,
        "bytecodeHex": "5b6101de8061001e6000396000f3",
        "parsedOpcodes": "15: JUMPDEST\n16: PUSH2 0x01de\n19: DUP1\n20: PUSH2 0x001e\n23: PUSH1 0x00\n25: CODECOPY\n26: PUSH1 0x00\n28: RETURN"
      },
      {
        "offset": 29,
        "length": 0,
        "type": "exit",
        "stackBalance": 0,
        "bytecodeHex": "",
        "parsedOpcodes": "29: EXIT BLOCK"
      }
    ],
    "successors": [
      {
        "from": 0,
        "to": [
          11,
          15
        ]
      },
      {
        "from": 11,
        "to": [
          29
        ]
      },
      {
        "from": 15,
        "to": [
          29
        ]
      },
      {
        "from": 29,
        "to": []
      }
    ],
    "buildReport": {
      "directJumpTargetErrors": 0,
      "orphanJumpTargetNullErrors": 0,
      "orphanJumpTargetUnknownErrors": 0,
      "loopDepthExceededErrors": 0,
      "multipleRootNodesErrors": 0,
      "stackExceededErrors": 0,
      "blockLimitErrors": 0,
      "criticalErrors": 0,
      "errorLog": "",
      "buildTimeMillis": 9
    }
  },
  "runtimeCfg": {
    "bytecode": "60606040526004361061004c576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff168063853828b614610051578063d0e30db014610066575b600080fd5b341561005c57600080fd5b610064610070565b005b61006e610154565b005b6000806000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549150600082111561015057816001600082825403925050819055503373ffffffffffffffffffffffffffffffffffffffff168260405160006040518083038185876187965a03f192505050905080151561010b57600080fd5b60008060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505b5050565b346000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282540192505081905550346001600082825401925050819055505600",
    "remainingData": "00",
    "nodes": [
      {
        "offset": 0,
        "length": 13,
        "type": "dispatcher",
        "stackBalance": 0,
        "bytecodeHex": "60606040526004361061004c57",
        "parsedOpcodes": "0: PUSH1 0x60\n2: PUSH1 0x40\n4: MSTORE\n5: PUSH1 0x04\n7: CALLDATASIZE\n8: LT\n9: PUSH2 0x004c\n12: JUMPI"
      },
      {
        "offset": 13,
        "length": 52,
        "type": "dispatcher",
        "stackBalance": 1,
        "bytecodeHex": "6000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff168063853828b61461005157",
        "parsedOpcodes": "13: PUSH1 0x00\n15: CALLDATALOAD\n16: PUSH29 0x0100000000000000000000000000000000000000000000000000000000\n46: SWAP1\n47: DIV\n48: PUSH4 0xffffffff\n53: AND\n54: DUP1\n55: PUSH4 0x853828b6\n60: EQ\n61: PUSH2 0x0051\n64: JUMPI"
      },
      {
        "offset": 65,
        "length": 11,
        "type": "dispatcher",
        "stackBalance": 0,
        "bytecodeHex": "8063d0e30db01461006657",
        "parsedOpcodes": "65: DUP1\n66: PUSH4 0xd0e30db0\n71: EQ\n72: PUSH2 0x0066\n75: JUMPI"
      },
      {
        "offset": 76,
        "length": 5,
        "type": "dispatcher",
        "stackBalance": 0,
        "bytecodeHex": "5b600080fd",
        "parsedOpcodes": "76: JUMPDEST\n77: PUSH1 0x00\n79: DUP1\n80: REVERT"
      },
      {
        "offset": 81,
        "length": 7,
        "type": "dispatcher",
        "stackBalance": 0,
        "bytecodeHex": "5b341561005c57",
        "parsedOpcodes": "81: JUMPDEST\n82: CALLVALUE\n83: ISZERO\n84: PUSH2 0x005c\n87: JUMPI"
      },
      {
        "offset": 88,
        "length": 4,
        "type": "dispatcher",
        "stackBalance": 0,
        "bytecodeHex": "600080fd",
        "parsedOpcodes": "88: PUSH1 0x00\n90: DUP1\n91: REVERT"
      },
      {
        "offset": 92,
        "length": 8,
        "type": "dispatcher",
        "stackBalance": 1,
        "bytecodeHex": "5b61006461007056",
        "parsedOpcodes": "92: JUMPDEST\n93: PUSH2 0x0064\n96: PUSH2 0x0070\n99: JUMP"
      },
      {
        "offset": 100,
        "length": 2,
        "type": "dispatcher",
        "stackBalance": 0,
        "bytecodeHex": "5b00",
        "parsedOpcodes": "100: JUMPDEST\n101: STOP"
      },
      {
        "offset": 102,
        "length": 8,
        "type": "dispatcher",
        "stackBalance": 1,
        "bytecodeHex": "5b61006e61015456",
        "parsedOpcodes": "102: JUMPDEST\n103: PUSH2 0x006e\n106: PUSH2 0x0154\n109: JUMP"
      },
      {
        "offset": 110,
        "length": 2,
        "type": "dispatcher",
        "stackBalance": 0,
        "bytecodeHex": "5b00",
        "parsedOpcodes": "110: JUMPDEST\n111: STOP"
      },
      {
        "offset": 112,
        "length": 78,
        "type": "common",
        "stackBalance": 2,
        "bytecodeHex": "5b6000806000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549150600082111561015057",
        "parsedOpcodes": "112: JUMPDEST\n113: PUSH1 0x00\n115: DUP1\n116: PUSH1 0x00\n118: DUP1\n119: CALLER\n120: PUSH20 0xffffffffffffffffffffffffffffffffffffffff\n141: AND\n142: PUSH20 0xffffffffffffffffffffffffffffffffffffffff\n163: AND\n164: DUP2\n165: MSTORE\n166: PUSH1 0x20\n168: ADD\n169: SWAP1\n170: DUP2\n171: MSTORE\n172: PUSH1 0x20\n174: ADD\n175: PUSH1 0x00\n177: SHA3\n178: SLOAD\n179: SWAP2\n180: POP\n181: PUSH1 0x00\n183: DUP3\n184: GT\n185: ISZERO\n186: PUSH2 0x0150\n189: JUMPI"
      },
      {
        "offset": 190,
        "length": 73,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "816001600082825403925050819055503373ffffffffffffffffffffffffffffffffffffffff168260405160006040518083038185876187965a03f192505050905080151561010b57",
        "parsedOpcodes": "190: DUP2\n191: PUSH1 0x01\n193: PUSH1 0x00\n195: DUP3\n196: DUP3\n197: SLOAD\n198: SUB\n199: SWAP3\n200: POP\n201: POP\n202: DUP2\n203: SWAP1\n204: SSTORE\n205: POP\n206: CALLER\n207: PUSH20 0xffffffffffffffffffffffffffffffffffffffff\n228: AND\n229: DUP3\n230: PUSH1 0x40\n232: MLOAD\n233: PUSH1 0x00\n235: PUSH1 0x40\n237: MLOAD\n238: DUP1\n239: DUP4\n240: SUB\n241: DUP2\n242: DUP6\n243: DUP8\n244: PUSH2 0x8796\n247: GAS\n248: SUB\n249: CALL\n250: SWAP3\n251: POP\n252: POP\n253: POP\n254: SWAP1\n255: POP\n256: DUP1\n257: ISZERO\n258: ISZERO\n259: PUSH2 0x010b\n262: JUMPI"
      },
      {
        "offset": 263,
        "length": 4,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "600080fd",
        "parsedOpcodes": "263: PUSH1 0x00\n265: DUP1\n266: REVERT"
      },
      {
        "offset": 267,
        "length": 69,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "5b60008060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550",
        "parsedOpcodes": "267: JUMPDEST\n268: PUSH1 0x00\n270: DUP1\n271: PUSH1 0x00\n273: CALLER\n274: PUSH20 0xffffffffffffffffffffffffffffffffffffffff\n295: AND\n296: PUSH20 0xffffffffffffffffffffffffffffffffffffffff\n317: AND\n318: DUP2\n319: MSTORE\n320: PUSH1 0x20\n322: ADD\n323: SWAP1\n324: DUP2\n325: MSTORE\n326: PUSH1 0x20\n328: ADD\n329: PUSH1 0x00\n331: SHA3\n332: DUP2\n333: SWAP1\n334: SSTORE\n335: POP"
      },
      {
        "offset": 336,
        "length": 4,
        "type": "common",
        "stackBalance": -3,
        "bytecodeHex": "5b505056",
        "parsedOpcodes": "336: JUMPDEST\n337: POP\n338: POP\n339: JUMP"
      },
      {
        "offset": 340,
        "length": 94,
        "type": "common",
        "stackBalance": -1,
        "bytecodeHex": "5b346000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055503460016000828254019250508190555056",
        "parsedOpcodes": "340: JUMPDEST\n341: CALLVALUE\n342: PUSH1 0x00\n344: DUP1\n345: CALLER\n346: PUSH20 0xffffffffffffffffffffffffffffffffffffffff\n367: AND\n368: PUSH20 0xffffffffffffffffffffffffffffffffffffffff\n389: AND\n390: DUP2\n391: MSTORE\n392: PUSH1 0x20\n394: ADD\n395: SWAP1\n396: DUP2\n397: MSTORE\n398: PUSH1 0x20\n400: ADD\n401: PUSH1 0x00\n403: SHA3\n404: PUSH1 0x00\n406: DUP3\n407: DUP3\n408: SLOAD\n409: ADD\n410: SWAP3\n411: POP\n412: POP\n413: DUP2\n414: SWAP1\n415: SSTORE\n416: POP\n417: CALLVALUE\n418: PUSH1 0x01\n420: PUSH1 0x00\n422: DUP3\n423: DUP3\n424: SLOAD\n425: ADD\n426: SWAP3\n427: POP\n428: POP\n429: DUP2\n430: SWAP1\n431: SSTORE\n432: POP\n433: JUMP"
      },
      {
        "offset": 434,
        "length": 0,
        "type": "exit",
        "stackBalance": 0,
        "bytecodeHex": "",
        "parsedOpcodes": "434: EXIT BLOCK"
      }
    ],
    "successors": [
      {
        "from": 0,
        "to": [
          13,
          76
        ]
      },
      {
        "from": 13,
        "to": [
          65,
          81
        ]
      },
      {
        "from": 65,
        "to": [
          76,
          102
        ]
      },
      {
        "from": 76,
        "to": [
          434
        ]
      },
      {
        "from": 81,
        "to": [
          88,
          92
        ]
      },
      {
        "from": 88,
        "to": [
          434
        ]
      },
      {
        "from": 92,
        "to": [
          112,
          112
        ]
      },
      {
        "from": 100,
        "to": [
          434
        ]
      },
      {
        "from": 102,
        "to": [
          340,
          340
        ]
      },
      {
        "from": 110,
        "to": [
          434
        ]
      },
      {
        "from": 112,
        "to": [
          190,
          336
        ]
      },
      {
        "from": 190,
        "to": [
          263,
          267
        ]
      },
      {
        "from": 263,
        "to": [
          434
        ]
      },
      {
        "from": 267,
        "to": [
          336
        ]
      },
      {
        "from": 336,
        "to": [
          100,
          100
        ]
      },
      {
        "from": 340,
        "to": [
          110
        ]
      },
      {
        "from": 434,
        "to": []
      }
    ],
    "buildReport": {
      "directJumpTargetErrors": 0,
      "orphanJumpTargetNullErrors": 0,
      "orphanJumpTargetUnknownErrors": 0,
      "loopDepthExceededErrors": 0,
      "multipleRootNodesErrors": 0,
      "stackExceededErrors": 0,
      "blockLimitErrors": 0,
      "criticalErrors": 0,
      "errorLog": "",
      "buildTimeMillis": 8
    }
  }
}