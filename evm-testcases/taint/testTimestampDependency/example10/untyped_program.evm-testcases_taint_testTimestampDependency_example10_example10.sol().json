{
  "name": "untyped program::evm-testcases/taint/testTimestampDependency/example10/example10.sol()",
  "description": null,
  "nodes": [
    {
      "id": 0,
      "subNodes": [
        1
      ],
      "text": "PUSH1 0x10"
    },
    {
      "id": 1,
      "text": "0x10"
    },
    {
      "id": 2,
      "subNodes": [
        3
      ],
      "text": "PUSH1 0x20"
    },
    {
      "id": 3,
      "text": "0x20"
    },
    {
      "id": 4,
      "subNodes": [
        5
      ],
      "text": "PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
    },
    {
      "id": 5,
      "text": "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
    },
    {
      "id": 6,
      "subNodes": [
        7
      ],
      "text": "PUSH1 0x08"
    },
    {
      "id": 7,
      "text": "0x08"
    },
    {
      "id": 8,
      "text": "AND"
    },
    {
      "id": 9,
      "text": "DIFFICULTY"
    },
    {
      "id": 10,
      "text": "ORIGIN"
    },
    {
      "id": 11,
      "text": "GASPRICE"
    },
    {
      "id": 12,
      "subNodes": [
        13
      ],
      "text": "PUSH1 0x20"
    },
    {
      "id": 13,
      "text": "0x20"
    },
    {
      "id": 14,
      "text": "AND"
    },
    {
      "id": 15,
      "subNodes": [
        16
      ],
      "text": "PUSH1 0x30"
    },
    {
      "id": 16,
      "text": "0x30"
    },
    {
      "id": 17,
      "text": "CALL"
    },
    {
      "id": 18,
      "text": "ret"
    }
  ],
  "edges": [
    {
      "sourceId": 0,
      "destId": 2,
      "kind": "SequentialEdge"
    },
    {
      "sourceId": 2,
      "destId": 4,
      "kind": "SequentialEdge"
    },
    {
      "sourceId": 4,
      "destId": 6,
      "kind": "SequentialEdge"
    },
    {
      "sourceId": 6,
      "destId": 8,
      "kind": "SequentialEdge"
    },
    {
      "sourceId": 8,
      "destId": 9,
      "kind": "SequentialEdge"
    },
    {
      "sourceId": 9,
      "destId": 10,
      "kind": "SequentialEdge"
    },
    {
      "sourceId": 10,
      "destId": 11,
      "kind": "SequentialEdge"
    },
    {
      "sourceId": 11,
      "destId": 12,
      "kind": "SequentialEdge"
    },
    {
      "sourceId": 12,
      "destId": 14,
      "kind": "SequentialEdge"
    },
    {
      "sourceId": 14,
      "destId": 15,
      "kind": "SequentialEdge"
    },
    {
      "sourceId": 15,
      "destId": 17,
      "kind": "SequentialEdge"
    },
    {
      "sourceId": 17,
      "destId": 18,
      "kind": "SequentialEdge"
    }
  ],
  "descriptions": [
    {
      "nodeId": 0,
      "description": {
        "expressions": [
          "push \"0x10\""
        ],
        "state": {
          "heap": "monolith",
          "type": "#TOP#",
          "value": "[_|_, _|_, _|_, _|_, _|_, _|_, _|_, _|_, _|_, _|_, _|_, _|_, _|_, _|_, _|_, _|_, _|_, _|_, _|_, _|_, _|_, _|_, _|_, _|_, _|_, _|_, _|_, _|_, _|_, _|_, _|_, C]"
        }
      }
    },
    {
      "nodeId": 1,
      "description": {
        "expressions": [
          "\"0x10\""
        ],
        "state": "#TOP#"
      }
    },
    {
      "nodeId": 2,
      "description": {
        "expressions": [
          "push \"0x20\""
        ],
        "state": {
          "heap": "monolith",
          "type": "#TOP#",
          "value": "[_|_, _|_, _|_, _|_, _|_, _|_, _|_, _|_, _|_, _|_, _|_, _|_, _|_, _|_, _|_, _|_, _|_, _|_, _|_, _|_, _|_, _|_, _|_, _|_, _|_, _|_, _|_, _|_, _|_, _|_, C, C]"
        }
      }
    },
    {
      "nodeId": 3,
      "description": {
        "expressions": [
          "\"0x20\""
        ],
        "state": {
          "heap": "monolith",
          "type": "#TOP#",
          "value": "[_|_, _|_, _|_, _|_, _|_, _|_, _|_, _|_, _|_, _|_, _|_, _|_, _|_, _|_, _|_, _|_, _|_, _|_, _|_, _|_, _|_, _|_, _|_, _|_, _|_, _|_, _|_, _|_, _|_, _|_, _|_, C]"
        }
      }
    },
    {
      "nodeId": 4,
      "description": {
        "expressions": [
          "push \"0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF\""
        ],
        "state": {
          "heap": "monolith",
          "type": "#TOP#",
          "value": "[_|_, _|_, _|_, _|_, _|_, _|_, _|_, _|_, _|_, _|_, _|_, _|_, _|_, _|_, _|_, _|_, _|_, _|_, _|_, _|_, _|_, _|_, _|_, _|_, _|_, _|_, _|_, _|_, _|_, C, C, C]"
        }
      }
    },
    {
      "nodeId": 5,
      "description": {
        "expressions": [
          "\"0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF\""
        ],
        "state": {
          "heap": "monolith",
          "type": "#TOP#",
          "value": "[_|_, _|_, _|_, _|_, _|_, _|_, _|_, _|_, _|_, _|_, _|_, _|_, _|_, _|_, _|_, _|_, _|_, _|_, _|_, _|_, _|_, _|_, _|_, _|_, _|_, _|_, _|_, _|_, _|_, _|_, C, C]"
        }
      }
    },
    {
      "nodeId": 6,
      "description": {
        "expressions": [
          "push \"0x08\""
        ],
        "state": {
          "heap": "monolith",
          "type": "#TOP#",
          "value": "[_|_, _|_, _|_, _|_, _|_, _|_, _|_, _|_, _|_, _|_, _|_, _|_, _|_, _|_, _|_, _|_, _|_, _|_, _|_, _|_, _|_, _|_, _|_, _|_, _|_, _|_, _|_, _|_, C, C, C, C]"
        }
      }
    },
    {
      "nodeId": 7,
      "description": {
        "expressions": [
          "\"0x08\""
        ],
        "state": {
          "heap": "monolith",
          "type": "#TOP#",
          "value": "[_|_, _|_, _|_, _|_, _|_, _|_, _|_, _|_, _|_, _|_, _|_, _|_, _|_, _|_, _|_, _|_, _|_, _|_, _|_, _|_, _|_, _|_, _|_, _|_, _|_, _|_, _|_, _|_, _|_, C, C, C]"
        }
      }
    },
    {
      "nodeId": 8,
      "description": {
        "expressions": [
          "and 1"
        ],
        "state": {
          "heap": "monolith",
          "type": "#TOP#",
          "value": "[_|_, _|_, _|_, _|_, _|_, _|_, _|_, _|_, _|_, _|_, _|_, _|_, _|_, _|_, _|_, _|_, _|_, _|_, _|_, _|_, _|_, _|_, _|_, _|_, _|_, _|_, _|_, _|_, _|_, C, C, C]"
        }
      }
    },
    {
      "nodeId": 9,
      "description": {
        "expressions": [
          "difficulty 1"
        ],
        "state": {
          "heap": "monolith",
          "type": "#TOP#",
          "value": "[_|_, _|_, _|_, _|_, _|_, _|_, _|_, _|_, _|_, _|_, _|_, _|_, _|_, _|_, _|_, _|_, _|_, _|_, _|_, _|_, _|_, _|_, _|_, _|_, _|_, _|_, _|_, _|_, C, C, C, T]"
        }
      }
    },
    {
      "nodeId": 10,
      "description": {
        "expressions": [
          "origin 1"
        ],
        "state": {
          "heap": "monolith",
          "type": "#TOP#",
          "value": "[_|_, _|_, _|_, _|_, _|_, _|_, _|_, _|_, _|_, _|_, _|_, _|_, _|_, _|_, _|_, _|_, _|_, _|_, _|_, _|_, _|_, _|_, _|_, _|_, _|_, _|_, _|_, C, C, C, T, C]"
        }
      }
    },
    {
      "nodeId": 11,
      "description": {
        "expressions": [
          "gasprice 1"
        ],
        "state": {
          "heap": "monolith",
          "type": "#TOP#",
          "value": "[_|_, _|_, _|_, _|_, _|_, _|_, _|_, _|_, _|_, _|_, _|_, _|_, _|_, _|_, _|_, _|_, _|_, _|_, _|_, _|_, _|_, _|_, _|_, _|_, _|_, _|_, C, C, C, T, C, C]"
        }
      }
    },
    {
      "nodeId": 12,
      "description": {
        "expressions": [
          "push \"0x20\""
        ],
        "state": {
          "heap": "monolith",
          "type": "#TOP#",
          "value": "[_|_, _|_, _|_, _|_, _|_, _|_, _|_, _|_, _|_, _|_, _|_, _|_, _|_, _|_, _|_, _|_, _|_, _|_, _|_, _|_, _|_, _|_, _|_, _|_, _|_, C, C, C, T, C, C, C]"
        }
      }
    },
    {
      "nodeId": 13,
      "description": {
        "expressions": [
          "\"0x20\""
        ],
        "state": {
          "heap": "monolith",
          "type": "#TOP#",
          "value": "[_|_, _|_, _|_, _|_, _|_, _|_, _|_, _|_, _|_, _|_, _|_, _|_, _|_, _|_, _|_, _|_, _|_, _|_, _|_, _|_, _|_, _|_, _|_, _|_, _|_, _|_, C, C, C, T, C, C]"
        }
      }
    },
    {
      "nodeId": 14,
      "description": {
        "expressions": [
          "and 1"
        ],
        "state": {
          "heap": "monolith",
          "type": "#TOP#",
          "value": "[_|_, _|_, _|_, _|_, _|_, _|_, _|_, _|_, _|_, _|_, _|_, _|_, _|_, _|_, _|_, _|_, _|_, _|_, _|_, _|_, _|_, _|_, _|_, _|_, _|_, _|_, C, C, C, T, C, C]"
        }
      }
    },
    {
      "nodeId": 15,
      "description": {
        "expressions": [
          "push \"0x30\""
        ],
        "state": {
          "heap": "monolith",
          "type": "#TOP#",
          "value": "[_|_, _|_, _|_, _|_, _|_, _|_, _|_, _|_, _|_, _|_, _|_, _|_, _|_, _|_, _|_, _|_, _|_, _|_, _|_, _|_, _|_, _|_, _|_, _|_, _|_, C, C, C, T, C, C, C]"
        }
      }
    },
    {
      "nodeId": 16,
      "description": {
        "expressions": [
          "\"0x30\""
        ],
        "state": {
          "heap": "monolith",
          "type": "#TOP#",
          "value": "[_|_, _|_, _|_, _|_, _|_, _|_, _|_, _|_, _|_, _|_, _|_, _|_, _|_, _|_, _|_, _|_, _|_, _|_, _|_, _|_, _|_, _|_, _|_, _|_, _|_, _|_, C, C, C, T, C, C]"
        }
      }
    },
    {
      "nodeId": 17,
      "description": {
        "expressions": [
          "call 1"
        ],
        "state": {
          "heap": "monolith",
          "type": "#TOP#",
          "value": "[_|_, _|_, _|_, _|_, _|_, _|_, _|_, _|_, _|_, _|_, _|_, _|_, _|_, _|_, _|_, _|_, _|_, _|_, _|_, _|_, _|_, _|_, _|_, _|_, _|_, _|_, _|_, _|_, _|_, _|_, _|_, #TOP#]"
        }
      }
    },
    {
      "nodeId": 18,
      "description": {
        "expressions": [
          "skip"
        ],
        "state": "#TOP#"
      }
    }
  ]
}